#! /bin/sh
#
# configure
#
# Configuration script for linux-programming
#
# Invoke configure --help for help.
#

showhelp()
{
cat << ENDHELP
usage: configure {options}
Configure the linux-programming.

Options:
  --help
  Display this help screen.

  --config=<config_name>
  Use the given build configuration.
  Available configurations are:

`ls -C $base/build-config/config/`

  --cflags=<flags>
  Pass additional flags to compiler.
  Example: --cflags=-wall

  --static)
  Build static liraries. Overrides default mode, which
  depends upon target. Can be specified together
  with --shared to build both.

ENDHELP
}

# save cwd
build=`pwd`
# get directory where we are located
cd `dirname $0`
base=`pwd`
cd $build

flags=""

# parse arguments
while [ $# -ge 1 ]; do
    case "$1" in
        --config=*)
            config="`echo ${1} | awk '{print substr($0, 10)}'`" ;;

        --cflags=*)
            flags="`echo ${1} | awk '{print substr($0, 10)}'`" ;;

        --static)
            static=1 ;;

        --help)
            showhelp
            exit 0
            ;;

        *)
            showhelp
            exit 1
            ;;

    esac
    
    shift
done

# autodetect build environment
if [ -z "$config" ]; then
    config=`uname`
fi

if [ ! -f "$base/build-config/config/$config" ]; then
    echo "Unknown configuration: $config"
    echo "Please use the --config option to specify another build configuration"
    echo "The following configurations are available:"
    ls $base/build-config/config
    exit 1
fi

# copy Makefile to build dir
if [ "$base" != "$build" ]; then
    cp $base/Makefile $build
fi

if [ -n "$static" -a -n "$shared" ]; then
    linkmode=BOTH
elif [ -n "$static" ]; then
    linkmode=STATIC
elif [ -n "$shared" ]; then
    linkmode=SHARED
else
    linkmode=""
fi

# create config.make
echo "# config.make generated by configure script" >$build/config.make
echo "MERCURY_CONFIG =$config" >> $build/config.make
echo "MERCURY_BASE =$base" >> $build/config.make
if [ "$base" != "$build" ]; then
    echo "MERCURY_BUILD=$build" >> $build/config.make
else
    echo "MERCURY_BUILD=$build/build" >> $build/config.make
fi
echo "MERCURY_FLAGS =$flags" >> $build/config.make

if [ -n "$linkmode" ]; then
    echo "LINKMODE = $linkmode" >>$build/config.make
fi

cat <<__EOF__>>$build/config.make
export MERCURY_CONFIG
export MERCURY_BASE
export MERCURY_BUILD
export MERCURY_FLAGS
__EOF__

if [ -n "$linkmode" ]; then
    echo "export LINKMODE" >>$build/config.make
fi

echo "Configured for $config"
